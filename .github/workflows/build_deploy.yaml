name: Build and deploy

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:

  build:
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/todolist
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Update Docker Compose
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          envsubst '$DOCKER_HUB_USERNAME,$TAG_NAME' < deploy/docker-compose.prod.yaml > deploy/docker-compose.yaml
          rm -f deploy/docker-compose.prod.yaml
      - name: Decrypt secrets
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.VAULT_PASSWORD }}
          command: "ansible-vault decrypt deploy/.env"
      - name: Collect Static
        run: |
          sudo docker run \
            --user 0 \
            --rm \
            --env-file $(pwd)/deploy/.env \
            --entrypoint  '' \
            -v $(pwd)/deploy/static/:/opt/static/:rw \
            ${{ secrets.DOCKER_HUB_USERNAME }}/todolist:${{ steps.vars.outputs.tag }} \
            python manage.py collectstatic -c --no-input
      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: todolist
          strip_components: 1
      - name: Run compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todolist
            docker compose pull
            docker compose up -d
      - name: Clear after deploy
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f
