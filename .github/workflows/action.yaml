name: Test, build and deploy

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:

  tests:
    runs-on: ubuntu-22.04
    env:
      DEBUG: False
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      SECRET_KEY: 'you-will-never-guess'
      VK_OAUTH2_KEY: 1234567890
      VK_OAUTH2_SECRET: 1234567890
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create env file and build image
        run: |
          env > .env
          docker-compose build
      - name: Run tests
        run: |
          docker-compose run --rm api python3 manage.py test

  build:
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/todolist
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: Production
      url: http://painassasin.ru
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.VAULT_PASSWORD }}
          command: "ansible-vault decrypt deploy/.env"
      - name: Update Docker Compose
        run: |
          envsubst '$DOCKER_HUB_USERNAME' < deploy/docker-compose.yaml > deploy/docker-compose.yaml
      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: todolist
          strip_components: 1
#      - name: Run compose
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |
#            cd todolist
#            docker compose pull
#            docker compose up -d
#      - name: Clear after deploy
#        if: always()
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |
#            docker system prune -a -f
